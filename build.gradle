buildscript {
    // These repositories are used when building your project.
    // They are NOT used to find your module's dependencies.
    repositories {
        // have the same repositories applied to buildscriptâ€¦
        apply from:"$rootDir/gradle/repositories.gradle", to: buildscript
    }

    dependencies {
        classpath "com.google.gms:google-services:$googleServicesPlugin"
        classpath "com.android.tools.build:gradle:$gradleBuildToolsVersion"
        classpath "com.mercadolibre.android.gradle:baseplugin:$meliPluginGradleVersion"
        classpath "com.mercadolibre.android.gradle:library:$meliPluginGradleVersion"
        classpath "com.mercadolibre.android.gradle:app:$meliPluginGradleVersion"
        classpath "com.github.dcendents:android-maven-gradle-plugin:$androidMavenGradlePlugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath("io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion") {
            //TODO: once Kotlin version matches with Detekt transitives one, we can delete this
            exclude group: 'org.jetbrains.kotlin'
        }
        classpath "com.getkeepsafe.dexcount:dexcount-gradle-plugin:$dexCountGradlePlugin"
        classpath "org.jetbrains.kotlinx:binary-compatibility-validator:$binaryCompatibilityPlugin"
    }
}

apply plugin: 'mercadolibre.gradle.config.base'
apply plugin: 'org.jetbrains.kotlinx.binary-compatibility-validator'

wrapper {
    gradleVersion = gradleWrapperVersion
    distributionType = Wrapper.DistributionType.BIN
}

allprojects {

    // It's our convention to keep all modules in the same GitHub repository with the same group and version.
    group = libraryGroupId
    version = libraryVersion

    tasks.withType(Test) {
        maxParallelForks = 4        // Do not exceed 4 threads
        forkEvery = 80              // Do not exceed 80 test blocks
        failFast = true             // Prepare quick fail
        maxHeapSize = "2048m"       // Do not exceed the maximum memory
        minHeapSize = "1024m"       // Do not exceed the maximum minimum memory
    }

    tasks.whenTaskAdded { task ->
        if (project.name != 'demoapp' && task.name.toLowerCase().contains('compile')) {
            task.finalizedBy('apiDump')
        }
    }

    apiValidation {
        ignoredPackages += [
             'com/mercadolibre/android/andesui/databinding',
             'com/mercadolibre/android/andesui/coachmark/databinding',
        ]
        ignoredProjects += [
                'demoapp'
        ]
    }
}
